$ var { embedCode, width, height, responsive } = input;

// Determine if the embed code is an iframe
$ if (embedCode.match(/^\<iframe/i)) {

  // Extract src, width, height values from iframe
  const iframe = {};
  embedCode.replace(/(src|width|height)=["']([^"']*)["']/gi, (match, key, val) => {
    iframe[key] = val;
  });

  // If responsive and a supported type, build responsive embed code
  if (responsive && iframe.src && iframe.src.match(/vimeo/i)) {

    // Vimeo
    let vimeoId = iframe.src.split('?')[0].split('/').pop();
    embedCode = `<div style="padding:56.25% 0 0 0;position:relative;">
      <iframe src="${iframe.src}" style="position:absolute;top:0;left:0;width:100%;height:100%;" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>
    </div>
    <script src="https://player.vimeo.com/api/player.js"></script>`;

  // If width AND height are sent, set new values
  } else if (width && height) {
    iframe.width = width;
    iframe.height = height;

    // Replace width & height
    embedCode = embedCode.replace(/(width|height)=["']([^"']*)["']/gi, (match, key, val) => {
        if (iframe[key]) return `${key}="${iframe[key]}"`;
    });

  // If width OR height are sent, preserve aspect ratio
  } else if (width || height) {

    if (width) {
      iframe.height = (iframe.height / iframe.width) * width;
      iframe.width = width;
    } else if (height) {
      iframe.width = (iframe.width / iframe.height) * height;
      iframe.height = height;
    }

    // Replace width & height
    embedCode = embedCode.replace(/(width|height)=["']([^"']*)["']/gi, (match, key, val) => {
        if (iframe[key]) return `${key}="${iframe[key]}"`;
    });
  }
}

<div class="node__video">$!{embedCode}</div>
