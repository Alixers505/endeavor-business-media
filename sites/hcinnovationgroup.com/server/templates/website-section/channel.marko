import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import queryFragment from "../../graphql/fragments/content-list";
import GAM from "../../../config/gam";

$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      $ const adSlots = {
          "gpt-ad-lb1":   GAM.getAdUnit({ name: "lb1", aliases }),
          "gpt-ad-rail2": GAM.getAdUnit({ name: "rail2", aliases }),
        }
       <marko-web-gam-slots slots=adSlots />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-gam-out-of-page-ad ...GAM.getAdUnit({ name: "wa", aliases }) />
      <marko-web-gam-out-of-page-ad ...GAM.getAdUnit({ name: "reskin", aliases }) />
    </marko-web-resolve-page>
  </@above-container>
  <@page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>

      <marko-web-gam-display-ad id="gpt-ad-lb1" modifiers=["top-of-page"] />

      $ const aliases = hierarchyAliases(section);
      <marko-web-query|{ nodes }|
        name="website-optioned-content"
        params={ sectionId: id, optionName: "Pinned", limit: 5, queryFragment }
      >
        <website-content-hero-flow nodes=nodes aliases=aliases />
      </marko-web-query>

      <div class="row">
        <div class="col-lg-12 mb-block">
          <marko-web-query|{ nodes }|
            name="website-scheduled-content"
            params={ sectionId: id, limit: 10, skip: 5, queryFragment }
          >
            <website-content-card-deck-flow nodes=nodes>
              <@native-x index=2 name="default" aliases=[alias] />
            </website-content-card-deck-flow>
          </marko-web-query>
        </div>
      </div>

      <div class="row">
        <div class="col-lg-4 page-rail">
          <marko-web-gam-define-display-ad ...GAM.getAdUnit({ name: "load-more", size: [300, 600], aliases }) modifiers=["in-card"] />
        </div>
        <div class="col-lg-8 mb-block">
          <marko-web-query|{ nodes }|
            name="website-scheduled-content"
            params={ sectionId: id, limit: 4, skip: 15, queryFragment }
          >
            <website-content-list-flow nodes=nodes>
              <@native-x index=2 name="default" aliases=[alias] />
            </website-content-list-flow>
          </marko-web-query>
        </div>
      </div>
    </marko-web-resolve-page>
  </@page>
  <@below-page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-load-more
        component-name="content-load-more-flow"
        component-input={
          aliases,
          nativeX: { index: 0, name: "default", aliases },
        }
        fragment-name="content-list"
        query-name="website-scheduled-content"
        query-params={ sectionId: id, limit: 14, skip: 19 }
        page-input={ for: "website-section", id }
      />
    </marko-web-resolve-page>
  </@below-page>
  <@foot>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-gam-fixed-ad-bottom ...GAM.getAdUnit({ name: "lb2", aliases }) refresh-interval=15 scroll-offset=100 />
    </marko-web-resolve-page>
  </@foot>
</marko-web-website-section-page-layout>
