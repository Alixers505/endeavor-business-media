import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import { isFunction } from "@base-cms/utils";
import queryFragment from "../../../graphql/fragments/content-list";

$ const { site, GAM } = out.global;
$ const {
  id,
  alias,
  name,
  pageNode,
} = input;

$ const adSlots = isFunction(input.adSlots) ? input.adSlots : ({ aliases }) => ({
  "gpt-ad-lb1":   GAM.getAdUnit({ name: "lb1", aliases }),
});

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <if(input.head)>
      <${input.head} />
    </if>
    <else>
      <marko-web-gtm-website-section-context|{ context }| alias=alias>
        <marko-web-gtm-push data=context />
      </marko-web-gtm-website-section-context>
      <marko-web-resolve-page|{ data: section }| node=pageNode>
        $ const aliases = hierarchyAliases(section);
        <shared-gam-define-slots builder=adSlots aliases=aliases />
      </marko-web-resolve-page>
    </else>
  </@head>

  <@above-container>
    <if(input.aboveContainer)>
      <${input.aboveContainer} />
    </if>
    <else>
      <marko-web-resolve-page|{ data: section }| node=pageNode>
        $ const aliases = hierarchyAliases(section);
        <shared-gam-out-of-page-ad name="wa" aliases=aliases />
        <shared-gam-out-of-page-ad name="reskin" aliases=aliases />
      </marko-web-resolve-page>
    </else>
  </@above-container>

  <@page>
    <if(input.page)>
      <${input.page} />
    </if>
    <else>
      <shared-gam-display-ad id="gpt-ad-lb1" modifiers=["top-of-page"] />

      <shared-content-hero-block id=id />
    </else>
  </@page>

  <@below-page>
    <if(input.belowPage)>
      <${input.belowPage} />
    </if>
    <else>
      <marko-web-resolve-page|{ data: section }| node=pageNode>
        $ const aliases = hierarchyAliases(section);
        $ const adunit = { aliases };
        <marko-web-load-more
          component-name="shared-content-load-more-card-deck-list-flow"
          component-input={
            cardDeck: { adunit },
            list: { adunit },
          }
          fragment-name="shared-content-list"
          query-name="website-scheduled-content"
          query-params={ sectionId: id, limit: 14, skip: 5 }
          max-pages=0
          page-input={ for: "website-section", id }
        />
      </marko-web-resolve-page>
    </else>
  </@below-page>

  <@foot>
    <if(input.foot)>
      <${input.foot} />
    </if>
    <else>
      <marko-web-resolve-page|{ data: section }| node=pageNode>
        $ const aliases = hierarchyAliases(section);
        <shared-fixed-ad-bottom>
          <@adunit aliases=aliases />
        </shared-fixed-ad-bottom>
      </marko-web-resolve-page>
    </else>
  </@foot>
</marko-web-website-section-page-layout>
